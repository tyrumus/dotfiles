# vim: ft=toml
{{- $chassisType := "desktop" }}
{{- writeToStdout (cat "available options: desktop (3 screen setup), laptop (1 screen setup), wsl (basic terminal-only setup in Arch distro)\n") }}
{{- writeToStdout (cat "chezmoi has determined it is running on" $chassisType "\n") }}
{{- if (not (promptBool "Is this correct? [Y/n]" true)) }}
{{-     $newChassisType := (promptString "what is the chassis type? [desktop, laptop, wsl, kitty]") }}
{{-     if (or (eq $newChassisType "desktop") (eq $newChassisType "laptop") (eq $newChassisType "wsl") (eq $newChassisType "kitty")) }}
{{-         $chassisType = $newChassisType }}
{{-     else }}
{{-         writeToStdout (cat "Error: unexpected input: " $newChassisType "\nWriting" $chassisType "to chezmoi config instead.\nRun \"chezmoi init\" again if this is incorrect.\n") }}
{{-     end }}
{{- end }}
{{- if not (eq .chezmoi.osRelease.id "arch") }}
{{-     writeToStdout (cat "chezmoi has detected that this is not an Arch Linux system, disabling install scripts...\n") }}
{{-     output "sh" (joinPath .chezmoi.sourceDir "/install/disable-install.sh") }}
{{- else }}
{{-     writeToStdout "\nIf you don't want the setup scripts to run automatically,\nensure you execute " .chezmoi.sourceDir "/install/disable-install.sh prior to running \"chezmoi apply\"\n" }}
{{- end }}
{{- if (eq $chassisType "kitty") }}
{{-     writeToStdout "\nYou've chosen a chassis type that expects numerous dependencies to be installed, available in the path:\n" }}
{{-     writeToStdout "git, ssh, zsh, kitty, nvim, lazygit, rustup\n" }}
{{- end }}

[data]
    chassistype = {{ $chassisType | quote }}
{{- if not (or (eq $chassisType "wsl") (eq $chassisType "kitty")) }}
    firefoxhash = {{ mozillaInstallHash "/usr/lib/firefox" | quote }}
{{- end -}}
